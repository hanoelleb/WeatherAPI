{"version":3,"sources":["index.js"],"names":["WeatherForm","props","handleChange","bind","handleToggle","sendQuery","state","city","country","report","fah","getWeather","event","changed","target","id","this","setState","value","document","getElementById","checked","preventDefault","units","query","fetch","response","json","data","console","log","wantedInfo","name","sys","weather","main","description","temp","WeatherReport","unit","onSubmit","className","type","onChange","placeholder","required","onClick","style","marginLeft","React","Component","scale","displayData","displayTemp","ReactDOM","render"],"mappings":"oPAOMA,G,wDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAC3B,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACb,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACxB,EAAKG,MAAS,CAACC,KAAM,GAAID,MAAO,GAAIE,QAAS,GAAIC,QAAQ,EAAOC,KAAK,GAC9D,EAAKC,WAAa,EAAKA,WAAWR,KAAhB,gBANH,E,yDASNS,GACT,IAAMC,EAAUD,EAAME,OAAOC,GAE7BC,KAAKC,SAAL,eAAgBJ,EAAUD,EAAME,OAAOI,U,mCAG9BN,GACLO,SAASC,eAAe,SAC1BC,QACLL,KAAKC,SAAS,CAACP,KAAK,IAEpBM,KAAKC,SAAS,CAACP,KAAK,M,yEAGLE,G,sFACXA,EAAMU,iBAETC,EAAQ,GAERA,EADAP,KAAKV,MAAMI,IACH,kBAEA,gBAGRc,EAtCI,qDAsCUR,KAAKV,MAAMC,KAAOgB,EArC5B,0C,SAsCeE,MAAMD,G,cAAvBE,E,gBACaA,EAASC,O,OAAtBC,E,OACNC,QAAQC,IAAIF,GAERG,EAAa,CAACH,EAAKI,KAAO,KAAOJ,EAAKK,IAAIzB,QACnCoB,EAAKM,QAAQ,GAAGC,KAChBP,EAAKM,QAAQ,GAAGE,YAChBR,EAAKO,KAAKE,MAErBrB,KAAKC,SAAS,CAACR,QAAQ,EAAMmB,KAAMG,I,2IAI9B,GAAIf,KAAKV,MAAMG,OAEX,OAAO,kBAAC6B,EAAD,CAAeV,KAAMZ,KAAKV,MAAMsB,KAAMW,KAAMvB,KAAKV,MAAMI,Q,+BAKjE,OACP,yBAAKK,GAAG,OACJ,wBAAIA,GAAG,UAAP,uBACA,yBAAKA,GAAG,gBACG,0BAAMyB,SAAUxB,KAAKX,WACjB,2BAAOU,GAAG,OAAO0B,UAAU,aAAaC,KAAK,OAAOC,SAAU3B,KAAKd,aAC7E0C,YAAY,aAAaC,UAAQ,IACrC,2BAAO9B,GAAG,QAAQ0B,UAAU,aAAaC,KAAK,OAAQC,SAAU3B,KAAKd,aACjE0C,YAAY,gCACF,2BAAO7B,GAAG,UAAU0B,UAAU,aAAaC,KAAK,OAAQC,SAAU3B,KAAKd,aACjF0C,YAAY,kCACT,2BAAO7B,GAAG,QAAQ2B,KAAK,QAAQV,KAAK,OAAOd,MAAM,IAAI4B,QAAS9B,KAAKZ,eACtD,0CAAmB,6BACzB,2BAAOW,GAAG,QAAQ2B,KAAK,QAAQV,KAAK,OAAOd,MAAM,IAAI4B,QAAS9B,KAAKZ,eAC7D,0CACN,2BAAOsC,KAAK,SAAS3B,GAAG,eAAeG,MAAM,aAAa6B,MAAO,CAACC,WAAY,WAE9FhC,KAAKL,mB,GAzEiBsC,IAAMC,YAgF1BZ,E,kDAEF,WAAYrC,GAAQ,IAAD,8BACd,cAAMA,IACRK,MAAS,CAAC6C,MAAO,GACf,EAAKC,YAAc,EAAKA,YAAYjD,KAAjB,gBAHL,E,wDAMPkC,GACR,OAAIrB,KAAKf,MAAMsC,KACX,4BAAKF,EAAO,UAEZ,4BAAKA,EAAO,Y,oCAIhB,IAAMT,EAAOZ,KAAKf,MAAM2B,KAMxB,OALPC,QAAQC,IAAI,cAAgBF,EAAK,IAC1BC,QAAQC,IAAI,YAAcF,EAAK,IAC/BC,QAAQC,IAAI,SAAWF,EAAK,IACnCC,QAAQC,IAAI,SAAWF,EAAK,IAGjB,6BACI,4BAAKA,EAAK,IACvBZ,KAAKqC,YAAYzB,EAAK,IACvB,4BAAKA,EAAK,IACI,4BAAKA,EAAK,O,+BAOlB,OACH,6BACKZ,KAAKoC,mB,GApCaH,IAAMC,WA0ClCI,IAASC,OACL,kBAACvD,EAAD,MACAmB,SAASC,eAAe,U","file":"static/js/main.5c022e5b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar url = 'https://api.openweathermap.org/data/2.5/weather?q=';\nvar key = '&appid=8c3a9b5cd702121d65eb503fc92a6c65';\n\nclass WeatherForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n\tthis.handleToggle = this.handleToggle.bind(this);\n        this.sendQuery = this.sendQuery.bind(this);\n\tthis.state = ({city: '', state: '', country: '', report: false, fah: false});\n        this.getWeather = this.getWeather.bind(this);\n    }\n\n    handleChange(event) {\n        const changed = event.target.id;\n\n        this.setState({[changed]: event.target.value});\n    }\n\n    handleToggle(event) {\n\tvar unit = document.getElementById('fUnit');\n\tif (unit.checked)\n\t    this.setState({fah: true});\n\telse \n\t    this.setState({fah: false});\n    }\n\n    async sendQuery(event) {\n         event.preventDefault();\n\n\t var units = '';\n\t if (this.state.fah) {\n\t     units = '&units=imperial';\n\t } else {\n\t     units = '&units=metric';\n\t }\n         \n\t var query = url + this.state.city + units + key;\n\t const response = await fetch(query);\n\t const data = await response.json();\n\t console.log(data);\n\n\t var wantedInfo = [data.name + ' ,' + data.sys.country,\n             data.weather[0].main,\n             data.weather[0].description,\n             data.main.temp];\n\n\t this.setState({report: true, data: wantedInfo});\n    }\n\n   getWeather() {\n       if (this.state.report)\n       {\n           return <WeatherReport data={this.state.data} unit={this.state.fah}/>\n       }\n   }\n\n    render() {\n        return (\n\t<div id='app'>\n\t    <h1 id='header'>What's the Weather?</h1>\n\t    <div id='locationForm'>\n                <form onSubmit={this.sendQuery}>\n                    <input id='city' className='inputField' type='text' onChange={this.handleChange} \n\t\t        placeholder='Enter city' required></input>\n\t\t    <input id='state' className='inputField' type='text'  onChange={this.handleChange} \n\t\t        placeholder='Enter state code (optional)'></input>\n                    <input id='country' className='inputField' type='text'  onChange={this.handleChange} \n\t\t        placeholder='Enter country code (optional)'></input>\n\t            <input id='fUnit' type='radio' name='unit' value='0' onClick={this.handleToggle}></input>\n                          <label>'째F'</label><br></br>\n                    <input id='cUnit' type='radio' name='unit' value='0' onClick={this.handleToggle}></input>\n                          <label>'째C'</label>\n                    <input type='submit' id='submitButton' value='Get Report' style={{marginLeft: 30 + 'px'}}></input>\n                </form>\n\t\t{ this.getWeather() }\n            </div>\n\t</div>\n\t)\n    };\n}\n\nclass WeatherReport extends React.Component {\n\n    constructor(props) {\n         super(props);\n\t this.state = ({scale: 0});\n         this.displayData = this.displayData.bind(this);\n    }\n\n    displayTemp(temp) {\n        if (this.props.unit)\n\t    return <h1>{temp + ' 째F'}</h1>\n        else\n\t    return <h1>{temp + ' 째C'}</h1>\n    }\n\n    displayData() {\n        const data = this.props.data;\n\tconsole.log('report for ' + data[0]);\n        console.log('weather: ' + data[1]);\n        console.log('desc: ' + data[2]);\n\tconsole.log('temp: ' + data[3]);\n\n        return (\n            <div>\n                <h1>{data[0]}</h1>\n\t\t{this.displayTemp(data[3])}\n\t\t<h2>{data[1]}</h2>\n                <h3>{data[2]}</h3>\n            </div>\n\t)\n    }\n\n    render() {\n\t//const data = this.props.data;\n        return (\n\t    <div>\n\t        {this.displayData()}\n            </div>\n\t)\n    }\n}\n\nReactDOM.render(\n    <WeatherForm />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}